#define _CRT_SECURE_NO_WARNINGS
#include <algorithm>
#include <stdio.h>
#include <vector>
#include <iostream>
#include <string>
#include <iostream>
#include <cstring>
using namespace std;
int tree2[4][4]={{3,0,0,0},{7,4,0,0},{2,4,6,0},{8,5,9,3}};
typedef long long ll;
//Since I do not know the input format
int tree[15][15]=					
{{215, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},//0
{193, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,0},//1
{117, 237, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},//2
{218, 935, 347, 235, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},//3
{320, 804, 522, 417, 345, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},//4
{229, 601, 723, 835, 133, 124, 0, 0, 0, 0, 0, 0, 0, 0, 0},//5
{248, 202, 277, 433, 207, 263, 257, 0, 0, 0, 0, 0, 0, 0, 0},//6
{359, 464, 504, 528, 516, 716, 871, 182, 0, 0, 0, 0, 0, 0, 0},//7
{461, 441, 426, 656, 863, 560, 380, 171, 923, 0, 0, 0, 0, 0, 0},//8
{381, 348, 573, 533, 447, 632, 387, 176, 975, 449, 0, 0, 0, 0, 0},//9
{223, 711, 445, 645, 245, 543, 931, 532, 937, 541, 444, 0, 0, 0, 0},//10
{330, 131, 333, 928, 377, 733, 017, 778, 839, 168, 197, 197, 0, 0, 0},//11
{131, 171, 522, 137, 217, 224, 291, 413, 528, 520, 227, 229, 928, 0, 0},//12
{223, 626, 034, 683, 839, 053, 627, 310, 713, 999, 629, 817, 410, 121, 0},//13
{924, 622, 911, 233, 325, 139, 721, 218, 253, 223, 107, 233, 230, 124, 233}};//14
bool primeChecker(int k)
{
	if(k==1)
		return false;
	else if(k==0)
		return false;
	for(int i=2; i<=k/2; i++)
	{
		if(k%i==0)
			return false;
	}
	//if it is prime
	return true;
}
// Input height of the triangle
void simplify(int m)
{
	for(int i=0; i<m; i++)
		for(int j=0; j<m; j++)
		{
			if(primeChecker(tree[i][j])){
				tree[i][j]=0;
			}
		}
}
// Input height of the triangle
int calculate(int m)
{
	for(int x=m-2; x>=0; x--)
	{
		for(int y=0; y<=x; y++)
		{
			tree[x][y]+=max(tree[x+1][y], tree[x+1][y+1]);
		}
	}
	return tree[0][0];
}

int main()
{	// 4 while height is 4.
	simplify(15);	
	printf("%d\n", calculate(15));
	return 0;
}
