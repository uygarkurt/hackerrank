// Complete the compare_lists function below.

/*
 * For your reference:
 *
 * SinglyLinkedListNode {
 *     int data;
 *     SinglyLinkedListNode* next;
 * };
 *
 */
bool compare_lists(SinglyLinkedListNode* head1, SinglyLinkedListNode* head2)
{
    typedef SinglyLinkedListNode list;
    if((*head1).next==nullptr && (*head2).next==nullptr)
    {
        return true;
    }
    else if((*head1).next==nullptr && (*head2).next!=nullptr)
    {
        return false;
    }
    else if((*head1).next!=nullptr && (*head2).next==nullptr)
    {
        return false;
    }
    else
    {
        while(head1!=nullptr && head2!=nullptr)
        {
            if((*head1).data!=(*head2).data)
                return false;
            else
            {
                head1=(*head1).next;
                head2=(*head2).next;
            }
        }
        if(head1==nullptr && head2==nullptr)
        {
            return true;
        }
        else
            return false;
    }
    

}
